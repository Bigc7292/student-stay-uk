import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import path from 'path'
import { visualizer } from 'rollup-plugin-visualizer'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [
    react(),
    // Bundle analyzer for optimization
    visualizer({
      filename: 'dist/stats.html',
      open: true,
      gzipSize: true,
      brotliSize: true,
    }),
  ],
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
    },
  },
  // Performance optimizations
  build: {
    // Enable source maps for debugging
    sourcemap: true,
    // Optimize chunk splitting
    rollupOptions: {
      output: {
        manualChunks: {
          // Vendor chunks
          'react-vendor': ['react', 'react-dom'],
          'ui-vendor': ['@radix-ui/react-dialog', '@radix-ui/react-dropdown-menu', '@radix-ui/react-tooltip'],
          'icons-vendor': ['lucide-react'],
          'utils-vendor': ['clsx', 'tailwind-merge'],
          
          // Feature chunks
          'maps-chunk': ['./src/services/mapsService.ts', './src/components/InteractiveMaps.tsx', './src/components/RoutePlanner.tsx'],
          'ai-chunk': ['./src/services/aiService.ts', './src/components/AIChatbot.tsx'],
          'api-chunk': ['./src/services/realPropertyService.ts', './src/components/APITester.tsx', './src/components/APIKeyManager.tsx'],
          'forms-chunk': ['./src/components/SearchForm.tsx', './src/components/ApplicationAssistant.tsx'],
        },
      },
    },
    // Optimize for production
    minify: 'terser',
    terserOptions: {
      compress: {
        drop_console: true, // Remove console.logs in production
        drop_debugger: true,
      },
    },
    // Set chunk size warning limit
    chunkSizeWarningLimit: 1000,
  },
  // Development server optimizations
  server: {
    port: 8080,
    host: true,
    // Enable HMR for faster development
    hmr: {
      overlay: true,
    },
  },
  // Preview server configuration
  preview: {
    port: 8080,
    host: true,
  },
  // Dependency optimization
  optimizeDeps: {
    include: [
      'react',
      'react-dom',
      'lucide-react',
      '@radix-ui/react-dialog',
      '@radix-ui/react-dropdown-menu',
      '@radix-ui/react-tooltip',
      'clsx',
      'tailwind-merge',
    ],
    exclude: [
      // Exclude large dependencies that should be loaded on demand
    ],
  },
  // Environment variables
  define: {
    // Enable production optimizations
    __DEV__: JSON.stringify(process.env.NODE_ENV !== 'production'),
  },
  // CSS optimizations
  css: {
    devSourcemap: true,
    preprocessorOptions: {
      // Add any CSS preprocessor options here
    },
  },
  // Worker optimizations
  worker: {
    format: 'es',
  },
  // Enable experimental features for better performance
  experimental: {
    renderBuiltUrl(filename, { hostType }) {
      if (hostType === 'js') {
        return { js: `/${filename}` }
      } else {
        return { relative: true }
      }
    },
  },
})
